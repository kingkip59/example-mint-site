{"version":3,"sources":["components/Address.jsx","components/LoadingSpinner.jsx","utilities/connect.jsx","utilities/mint.jsx","pages/Mint.jsx","App.js","reportWebVitals.js","index.js"],"names":["Address","str","cutStart","cutEnd","address","className","substr","LoadingSpinner","src","connect","a","window","ethereum","Error","provider","ethers","providers","Web3Provider","send","signer","getSigner","getAddress","CONTRACT","publicMint","amount","contract","Contract","abi","value","utils","parseEther","toString","receipt","getMintInfo","totalSupply","toNumber","STATUS","Mint","useState","status","setStatus","loading","setLoading","mintInfo","setMintInfo","quantity","setQuantity","getNetwork","chainId","console","log","type","message","error","reason","hash","alt","width","height","href","target","dangerouslySetInnerHTML","__html","onClick","htmlFor","id","name","defaultValue","onChange","e","handleMint","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcf1830b.chunk.js","sourcesContent":["function cut(str, cutStart, cutEnd) {\n    return str.substr(0, cutStart) + '...' + str.substr(cutEnd + 1);\n}\n\nexport function Address({ address = \"\" }) {\n    return address && (\n        <div className=\"address\">\n            <h4>Connected Wallet: <br></br>{cut(address, 6, 35)}</h4>\n        </div>\n    )\n}","export function LoadingSpinner() {\n    return (\n        <div className=\"loading-spinner\">\n            <span className=\"icon\">\n                <img src=\"/svg/spinner.svg\" />\n            </span>\n        </div>\n    )\n}","import { ethers } from \"ethers\";\n\nexport async function connect() {\n    if (!window.ethereum) {\n        throw new Error(\"No crypto wallet found. Please install it.\");\n    }\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n    await provider.send(\"eth_requestAccounts\", []);\n\n    const signer = provider.getSigner();\n    const address = await signer.getAddress();\n\n    return {\n        address,\n        provider,\n        signer,\n    }\n}","import { ethers } from \"ethers\";\nimport abi from \"../contract/abi.json\";\n\nconst CONTRACT = \"0xC06C56E5d7953C93e26374d5B214acb52ECf940F\";\n\nexport async function publicMint({ amount, signer }) {\n    const contract = new ethers.Contract(CONTRACT, abi, signer);\n\n    const receipt = await contract.publicMint({\n        value: ethers.utils.parseEther(amount.toString()),\n    });\n    return receipt;\n}\n\nexport const getMintInfo = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const contract = new ethers.Contract(CONTRACT, abi, provider);\n\n    const totalSupply = await contract.totalSupply();    \n\n    return {\n        totalSupply: totalSupply.toNumber(),\n    }\n}\n","import { useState } from \"react\";\nimport { Address } from \"../components/Address\";\nimport { LoadingSpinner } from \"../components/LoadingSpinner\";\nimport { connect } from \"../utilities/connect\";\nimport { publicMint, getMintInfo } from \"../utilities/mint\";\n\nconst STATUS = {\n\tERROR: 'error',\n\tSUCCESS: 'success',\n};\n\nexport default function Mint() {\n\tconst [status, setStatus] = useState();\n\tconst [loading, setLoading] = useState();\n\tconst [mintInfo, setMintInfo] = useState({});\n\tconst [quantity, setQuantity] = useState(1);\n\tconst {\n\t\taddress,\n\t\tsigner,\n\t\ttotalSupply,\n\t} = mintInfo;\n\n\tasync function handleConnect() {\n\t\ttry {\n\t\t\tsetLoading(true)\n\t\t\tconst { address, provider, signer } = await connect();\n\t\t\tconst { chainId } = await provider.getNetwork();\n\t\t\tif (chainId !== 1 && chainId !== 4) {\n\t\t\t\tthrow Error(\"Wrong network, please change to the correct network and try again.\")\n\t\t\t}\n\t\t\tconst {\n\t\t\t\ttotalSupply,\n\t\t\t} = await getMintInfo();\n\t\t\tsetMintInfo({\n\t\t\t\taddress,\n\t\t\t\tprovider,\n\t\t\t\tsigner,\n\t\t\t\ttotalSupply,\n\t\t\t\tchainId\n\t\t\t})\n\t\t\tsetLoading(false)\n\t\t} catch (error) {\n\t\t\tconsole.log('connect', error)\n\t\t\tsetStatus({\n\t\t\t\ttype: STATUS.ERROR,\n\t\t\t\tmessage: error?.error?.message || error?.reason || error?.message\n\t\t\t});\n\t\t\tsetLoading(false);\n\t\t}\n\t}\n\n\n\tasync function handleMint() {\n\t\ttry {\n\t\t\tconst receipt = await publicMint({\n\t\t\t\tamount: quantity * 0.0418,\n\t\t\t\tsigner,\n\t\t\t})\n\t\t\tsetStatus({\n\t\t\t\ttype: STATUS.SUCCESS,\n\t\t\t\tmessage: `<a href=\"https://etherscan.io/tx/${receipt?.hash}\" target=\"_blank\" rel=\"noreferrer\">Check out your transaction on Etherscan</a>.`,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tsetStatus({\n\t\t\t\ttype: STATUS.ERROR,\n\t\t\t\tmessage: error?.error?.message || error?.reason || error?.message\n\t\t\t});\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Address address={address} />\n\t\t\t<a>\n\t\t\t\t<p></p>\n\t\t\t</a>\n\t\t\t<h2>Welcome to Lucy's Colorful Friends NFT</h2>\n\t\t\t<a> <img src=\"hearts.png\" alt=\"Acceptance\" width=\"600\" height=\"343\" />\n\t\t\t<p></p>\n\t\t\t</a>\n\t\t\t<a href=\"https://medium.com/@kipinvestment1/lucys-colorful-friends-f5c655af98a5\" target=\"_blank\">\n\t\t\t\t<button> View Medium </button>\n\t\t\t\t\n\t\t\t\t<p></p>\n\t\t\t</a>\n\t\t\t\n\t\t\t{\n\t\t\t\tstatus?.type && (\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<p className={status?.type} dangerouslySetInnerHTML={{ __html: status?.message }} />\n\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\t{\n\t\t\t\t!address && !loading ? (\n\t\t\t\t\t<button onClick={handleConnect}>Connect Wallet</button>\n\t\t\t\t) : (<></>)\n\t\t\t\t\n\t\t\t}\n\t\t\t{\n\t\t\t\tloading && (\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t)\n\t\t\t}\n\t\t\t{\n\t\t\t\taddress && (\n\t\t\t\t\t<h1>{totalSupply} / 300</h1>\n\t\t\t\t)\n\t\t\t}\n\t\t\t{\n\t\t\t\taddress && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className=\"amount\">\n\t\t\t\t\t\t\t<label htmlFor=\"One\">Number of Friends</label>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<input type=\"number\" id=\"One\" name=\"mint_amount\" defaultValue={1} onChange={(e) => setQuantity(e.target.value)} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<button onClick={() => handleMint()}>Mint</button>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t</>\n\t)\n}","import React from \"react\";\n\nimport './App.css';\n\nimport Mint from './pages/Mint';\n\nfunction App() {\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"content\">\n\t\t\t\t<Mint />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}